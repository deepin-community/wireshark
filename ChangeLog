commit f265aa8d4e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 23 11:40:57 2023 -0700

    Build: 4.0.8

    [skip ci]

commit d35320f21c
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Tue Aug 22 22:58:24 2023 +0200

    addr_resolv: fix external reverse IPv6 lookup in tshark

    Pass a pointer to the IPv6 address instead of a pointer to the pointer.

    Fixes #19294

    Fixes: v2.9.0rc0-666-g0542c5b700 ("Do IP address resolution synchronously before printing in TShark.")

    (cherry picked from commit a6914ba92f6ca7f7f29075a71b5433dc855a8957)

commit aca6c57f2b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Aug 21 13:10:04 2023 -0700

    Release notes: Fix a typo

    [skip ci]

commit 33488daaf6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Aug 21 11:17:10 2023 -0700

    Prep for 4.0.8

    [skip ci]

commit f3abf237d3
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 20 16:19:23 2023 +0000

    [Automatic update for 2023-08-20]

    Update manuf, services enterprise numbers, translations, and other items.

commit dad549f0d9
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Fri Aug 18 15:43:29 2023 +0200

    tshark: Register extcap preferences when needed

    TShark is not always capturing when cf_name is empty. Improve check
    for when to not register extcap preferences for this cases.

    (cherry picked from commit bf2f8c5fadc4feee3774d4cf8e0288b1d1190301)

commit da30a56292
Author: João Valverde <j@v6e.pt>
Date:   Thu Aug 10 15:07:26 2023 +0100

    IP: Add DiffServ codepoint 44

    Fixes #19270.

    (cherry picked from commit 1c11845ad010fa601d82f2d4b61c108db1bc729c)

commit fe16d401f9
Author: João Valverde <j@v6e.pt>
Date:   Tue Jun 13 11:40:28 2023 +0100

    Github: Fix Windows build

    Replace deprecated and now removed 'cinst' command.

    (cherry picked from commit 5a63a543cfdeafa808ed29333b60db3379a7bc74)

commit 1ea289513b
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Aug 13 06:45:14 2023 -0400

    Qt: Don't use winId() on a child widget (Qt Wayland issue)

    On Qt Wayland, winId() should only be used on a top-level window:
    https://bugreports.qt.io/browse/QTBUG-76983
    https://bugreports.qt.io/browse/QTBUG-93103
    https://bugs.kde.org/show_bug.cgi?id=424024
    https://bugreports.qt.io/browse/QTBUG-75766

    Using it on the child widget and getting a native window causes the
    packet list to fail to redraw correctly when scrolling. (It does
    redraw when the window is brought to the back and then back to the front.)

    (cherry picked from commit 18018f7534c179d7f11cd94fab9cc3da9464c37a)

commit dd1922eef1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 13 16:35:23 2023 +0000

    [Automatic update for 2023-08-13]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit 473539b3c7
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 12 01:57:53 2023 -0400

    Qt: Restore autoscroll behavior to toggled

    Prior to fc461d1592f35f25e30a68bcbab936a66dc853c8,
    actionGoAutoScroll's toggled signal was connected to
    PacketList setVerticalAutoScroll, but in changing to
    manually connected actions, it was changed to the triggered
    signal, like the other actions.

    The difference between toggled and triggered is that setChecked()
    causes toggled to fire but not triggered. We want it to
    call setVerticalAutoScroll when setChecked is used, because that
    is called by packetListScrolled when the user scrolls to the end
    of the packets.

    As it is now, the button changes state but the autoscrolling
    behavior does not change.

    Fix #19274

    (cherry picked from commit 63fad4db265208c3ea1d6362341a49967c9543c7)

commit 080a5fc83f
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Aug 12 13:45:16 2023 -0700

    dumpcap: map DLT_ values from libpcap or piped pcap headers to LINKTYPE_s.

    For most link-layer header types, the DLT_ value and the LINKTYPE_ value
    are the same.

    For some DLT_s for which the values are *not* the same on all OSes, or
    which weren't defined on some OSes, that's not the case, because, in
    order to have a *single* link-layer type value to use in capture files
    on *all* platforms, so that the link-layer type is the same no matter
    what OS it was captured on, new values were assigned for LINKTYPE_s.

    (That's why LINKTYPE_s were created in the first place.)

    Therefore, we should map DLT_ values obtained from libpcap to the
    corresponding LINKTYPE_ values before using the value in a pcap header
    or a pcapng Interface Description Block.

    Furthermore, since a pcap or pcapng file being piped to dumpcap might
    have been generated by a program that doesn't do DLT_ to LINKTYPE_
    mapping (the libpcap from tcpdump.org has done so for many years now,
    but OpenBSD's libpcap doesn't), we map them for pcap files as well.
    (pcapng files require that we not just blindly copy the pcapng file.
    Other things, such as byte-swapped pcapng files, may also require that;
    this needs to be looked into.)

    Fixes #19230.

    (cherry picked from commit c3fe4c8fd86dec526e954f6d6613fe4b78c5c687)

commit 3309cdf60c
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Aug 11 19:35:17 2023 -0700

    Don't assign a struct timeval to the time stamp in a pcap_pkthdr.

    The time stamp in a pcap_pkthdr may not have the same type as a struct
    timeval.

    (cherry picked from commit a03041e601c773a877ada2b161766fbcf2bec419)

commit 47829988d9
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Aug 11 19:10:23 2023 -0700

    Don't use RLIMIT_AS if it isn't defined.

    It's in the latest Single UNIX Standard, but OpenBSD doesn't have it as
    of 7.3.

    While we're at it, if setrlimit() fails, report what error it got.

    (backported from commit da8b06065a309cdf5cdc8e01796a4eedbfa72d77)

commit e9e7883e62
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Aug 11 18:18:56 2023 -0700

    <sys/ioctl.h> is needed to declare ioctl().

    We use ioctl(SIOCGIFDESCR) to get an interface description on FreeBSD
    and OpenBSD.

    (cherry picked from commit fc6124f54b162cfc4b4a2b3245b666d280fe7370)

commit 5877684c5b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Dec 1 12:44:27 2022 -0800

    Qt: Redraw the packet bytes when our screen changes.

    Blind attempt at fixing #18146 and #18326.

    (cherry picked from commit a6aa2cdd5147e21685319233e9d7f7c7562f6947)

commit e96dc76c4f
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 11 07:35:10 2023 -0400

    NAS 5GS: Don't double advance the offset

    dissect_e212_mcc_mnc returns the new offset (offset + 3). If using
    the return value, don't advance the offset separately.

    Fix #19273

    (cherry picked from commit 2539d14d15bcb7474d052b324a7fa25e12cf30c6)

commit bde390cf63
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 11 05:42:25 2023 -0400

    Qt: Set icon back to capture icon with a new file

    When in multiple file modes, the captureCaptureUpdateFinished
    callback sets the icon back to the normal icon when a file is
    finished, so set it back to the capture icon in the
    CaptureUpdateStarted callback when the next file starts.

    Fix #19252

    (cherry picked from commit 6027465d10eba3d75036ad4ba701415aa5b3945f)

commit 9c1c03ab39
Author: Martin Nyhus <martin@nyhus.dev>
Date:   Thu Aug 10 20:04:51 2023 +0200

    conversation: use epan scope for hashtable key

    conversation_hashtable_element_list including the keys and maps it
    contains are reused across files, so the key needs to use the epan scope
    to avoid use after free.

    Fixes #19265

    (cherry picked from commit 615e4731e00d9fea52a03ffe4ea383bf13443e83)

commit ac20bfe644
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 10 05:29:09 2023 -0400

    btsdp: Keep offset advancing

    hf_data_element_value is a FT_NONE, so we can add the item with
    the expected length and get_hfi_length() will adjust the length
    without throwing an exception. There's no need to add it with
    zero length and call proto_item_set_len. Also, don't increment
    the offset by 0 instead of the real length when there isn't
    enough data in the packet, as that can lead to failing to advance
    the offset.

    When dissecting a sequence type (sequence or alternative) and
    recursing into the sequence member, instead of using the main
    packet tvb directly, create a subset using the indicated length
    of the sequence. That will properly throw an exception if a
    contained item is larger than the containing sequence, instead of
    dissecting the same bytes as several different items (inside
    the sequence recursively, as well in the outer loop.)

    Fix #19258

    (cherry picked from commit ef9c79ae81b00a63aa8638076ec81dc9482972e9)

commit 63005cc3df
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 10 02:47:58 2023 -0400

    btsdp: Finalize wmem_strbuf

    The allocated wmem_strbuf isn't used after this, so it can
    be finalized to save a bit of memory.

    Related to #19259

    (cherry picked from commit 7fecc31427e0ec5e55ac2611df94678940c1df7d)

commit 0448263194
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 10 01:19:21 2023 -0400

    wmem: Fix leak in block_fast when realloc'ing jumbo blocks

    In block fast wmem_allocator is used, keep the double linked
    list of jumbo blocks accurate by pointing the prev pointer of
    the old head (if it exists) to the newly allocated jumbo block.

    This prevents a leak if a jumbo block which is not the most
    recently added jumbo block is realloc'ed. If the prev pointer
    isn't set properly, then all the jumbo blocks added afterwards
    will be lost from the list and leaked.

    Fix #19259

    (cherry picked from commit d086f2733bc611eb310aafec51bd28d44166fa42)

commit c4b5ebbaeb
Author: Anders Broman <anders.broman@ericsson.com>
Date:   Wed Aug 9 19:36:59 2023 +0000

    F1AP: NotificationInformation is a normal IE not an extension.

    (cherry picked from commit 2abe8ced1d318fe6290476ecf598b36b8b44bb86)

commit d73ec74e5f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 6 16:19:11 2023 +0000

    [Automatic update for 2023-08-06]

    Update manuf, services enterprise numbers, translations, and other items.

commit 20277b10ac
Author: Nardi Ivan <nardi.ivan@gmail.com>
Date:   Tue Dec 13 15:35:16 2022 +0100

    QUIC: update final constants for QUICv2

    Old v2-01 version has been removed, like we did for v2-00 in 78d78eb016.

    See:
    https://datatracker.ietf.org/doc/draft-ietf-quic-v2/
    https://datatracker.ietf.org/doc/draft-ietf-quic-version-negotiation-14

    (cherry picked from commit 507d5c5386fce26e00216807973233e7f856e3ea)

commit 56ef8662a9
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 3 21:21:56 2023 -0400

    extcap: Flush after writing the pcap header

    Call fflush in udpdump and ciscodump after writing the pcap header
    so that it is actually written out even if no packets have arrived yet.

    By doing so, dumpcap no longer blocks in cap_pipe_open_live waiting
    for the pcap header from the extcap pipe until the first packet is
    captured, but instead goes on to (attempt to) open its output.

    This means that if we capture no packets that a capture file with
    a header but no packet records will be created (and, if not a temp
    file, will have to be cleaned up), but that is consistent with tshark
    and Wireshark behavior otherwise.

    This means you can no longer do a capture to a FIFO or Named Pipe
    in this order:

    1) Start dumpcap
    2) Create the FIFO or Named Pipe
    3) Start the flow of packets to the UDP port

    which only worked when not dissecting packets. It was broken if tshark
    also needed to dissect packets, but evaded the checks for if we were
    writing to a FIFO or Named Pipe resulting in behavior mysterious to
    users, such as only writing to one of the Named Pipe readers on Windows
    (or failing if there aren't enough instances), or having tshark and
    the other pipe reader compete for the pipe input and eventually failing
    on UN*X.

    Instead, the FIFO or Named Pipe needs to be created before launching
    dumpcap, or else an ordinary file will be created (on UN*X), or an
    error about not being able to open the output (on Windows, since
    Named Pipes have a magic prefix, and you can't create an ordinary
    file with a named pipe filename.)

    Fix #17900.

    (cherry picked from commit 9ad1ec1651689a39e86562d083a0794d6fcbc2c2)

commit 11fae9975d
Author: Preben Guldberg <preben@guldberg.org>
Date:   Thu Mar 9 22:40:35 2023 +0000

    GUI: Colorize with filter could use an old filter

    When right-clicking an item in the packet details and using "Colorize
    with Filter", the colour may be applied using the wrong filter.

    The code currently only updates the filter used for "Colorize with
    Filter" if the packet details are visible and has focus. This is not
    the case when you switch from one packet to another (at least by
    clicking the other frame in the packet list).

    The patch moves the emit of fieldFilterChanged() up to where the
    filed_filter is identified. This seems the least intrusive.

    (cherry picked from commit b50ed1dc8088ae0a844e5f451c19b8b333569e47)

commit cc60922a84
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Aug 2 14:34:39 2023 +0200

    TFTP: resuscitate tsize probe detection code (CID1471625)

    TFTP tsize probes were no longer being recognized, due to parsing of
    other options. Move the tsize probe detection code to the appropriate
    conditional block.

    (cherry picked from commit 4f99469b03b22c8b72a9905e0fb028a9482ae043)

commit ce294d972a
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jul 27 20:21:19 2023 +0200

    CP2179: Handle timetag info response without records

    Fixes #19229

    (cherry picked from commit 44dc70cc5aadca91cb8ba3710c59c3651b7b0d4d)

commit 8752d2a137
Author: Nardi Ivan <nardi.ivan@gmail.com>
Date:   Mon Jul 31 21:15:56 2023 +0200

    PFCP: fix dissection of Offending IE Information IE

    (cherry picked from commit c058febb450de74d9f561d03284091091cec7e34)

commit 7a86d907ea
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 30 16:19:12 2023 +0000

    [Automatic update for 2023-07-30]

    Update manuf, services enterprise numbers, translations, and other items.

commit 09261c1395
Author: Van Ly Vu <van.ly.vu@vestifi.de>
Date:   Fri Jul 28 22:03:57 2023 +0200

    Fix typo for field wlan.wfa.ie.wpau.cs.oui

    (cherry picked from commit 5eb3fdc47a18ff8af8aff4ec60c18867ebdb61c7)

commit 8bf8b3c727
Author: Markku Leiniö <markku@iki.fi>
Date:   Wed Jul 26 11:36:54 2023 +0300

    Change data size formatting to use SI units and 0 precision

    (cherry picked from commit a9241ef14efd068bbc6f1948ec5c4dd58d26cbd9)

commit 5e621be8b7
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jul 21 11:57:22 2023 -0400

    Websocket: Restore the text payload field

    Add back the websocket.payload.text field, always displaying the
    unmasked payload, so that the entire payload string can be filtered
    or added to the info column.

    Fix #19220

    (cherry picked from commit edd0517fae3738faa6d44df7cc6f46da4ba851c5)

commit 6c12318853
Author: Vadim Yanitskiy <vyanitskiy@sysmocom.de>
Date:   Wed Jul 26 00:47:38 2023 +0700

    GSM A DTAP: fix value-string for Signalling Access Protocol

    Last time this value-string was edited in 959a2909612, and before
    this commit there was only one value (all other values resevred):

      case 0x01: str = "According to ITU-T Rec. Q.920 and ITU-T Rec. Q.930";
      case 0x02: str = "Reserved: was allocated in earlier phases of the protocol";
      case 0x03: str = "Reserved: was allocated in earlier phases of the protocol";
      case 0x04: str = "Reserved: was allocated in earlier phases of the protocol";
      case 0x05: str = "Reserved: was allocated in earlier phases of the protocol";
      case 0x06: str = "Reserved: was allocated in earlier phases of the protocol";
      default:   str = "Reserved";

    This matches the definition of the "Signalling access protocol (octet 5)"
    in recent version (17.8.0, 2022-10) of 3GPP TS 24.008.  However, the
    above-mentioned commit replaced the switch statement with a value-string
    conforming neither 3GPP TS 24.008, nor the earlier GSM 04.08.

    Let's revert back to the correct description, and additionally take
    a chance to specify the old meaning of reserved values (from GSM 04.08).

    (cherry picked from commit a6bd924c0aab7f671fbfd785ec758cd7c1d59cda)

commit 78af80c660
Author: Yaniv Kaul <yaniv.kaul@scylladb.com>
Date:   Tue Jul 25 13:28:25 2023 +0300

    packet-cql.c: fix ERROR message parsing

    offset parameter was not moved forward by 4 bytes, causing ERROR messages not to be parsed properly.

    Signed-off-by: Yaniv Kaul <yaniv.kaul@scylladb.com>

    (cherry picked from commit 7e08afb4786242e836455cd9807f95c4eafdc277)

commit c48fe75d5b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 23 16:19:50 2023 +0000

    [Automatic update for 2023-07-23]

    Update manuf, services enterprise numbers, translations, and other items.

commit 38fbc5721a
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 22 11:13:39 2023 -0400

    DHCPFO: Make expert infos appear in Expert Info Dialog

    Remove a check for a NULL tree that prevents expert info
    information from being added to the Expert Info Dialog when
    there is no filter and hence no tree when tapping.

    Fix #19216

    (cherry picked from commit 3c6b6721ac1136e0d1e7e783e837450a21484c21)

commit e1a66bd237
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Jul 20 10:34:26 2023 -0700

    GitLab CI: Update a tag and variable

commit 045094a139
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Jul 17 15:43:45 2023 -0700

    Fix comment in a typo. [skip ci]

    (cherry picked from commit 889d0d6e6c03f8b11abfa432b897e83533afec8c)

commit 97cc56776f
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Jul 17 12:22:45 2023 -0700

    Fix the check for Windows 11 to detect 22H2.

    Instead of treating one particular build number as W11, for all OS
    versions with a "major version number" of 10, treat all build numbers
    less than 10240 as some unknown version, treat build numbers in
    [10240,22000) as W10, and all build numbers 22000 and above as W11.

    Add comments about other ways of obtaining the OS's "product
    name"/"brand name"/whatever that let Microsoft code do a lot of the
    heavy lifting, rather than requiring us to do it in a fashion that might
    require us to update it.

    (cherry picked from commit 52c45b278ec858249b9e2ede2ca6300afa898a97)

commit 41a8569e94
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 15 08:17:17 2023 -0400

    dumpcap: Add a permissions warning about capabilities

    If we have Linux capabilities, and dumpcap gets a permission error,
    suggest that the user add the CAP_NET_RAW and CAP_NET_ADMIN capabilities
    that dumpcap needs if Wireshark was not installed by a package.
    (Distribution packages should set the capabilities.)

    Fix #18279

    (cherry picked from commit 7bfc3f2c13e45dff3241c5f36fd319b23e331ed5)

commit a76d9c2b10
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 12 16:02:52 2023 -0700

    CBOR: Add a recursion check

    Fixes #19144

    (cherry picked from commit 76719d21eb1aff3ae8d2d4536d9dc118107631b4)

commit 3e450450a0
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Mon Jul 17 21:26:38 2023 +0200

    Qt: Change handling of folder name text entry

    When changing text, don't use the crude method of setting all widgets
    where setting of the radio button is sufficient. Setting all widgets
    causes the text to be set as well, with cursor at the end of the input.

    Closes #19213

    (cherry picked from commit f307a16d36a60cadffd468bce7bc4bd7ba3a5199)

commit d411348c3d
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Jul 17 17:57:16 2023 +0200

    XnAP: fix another test

    (cherry picked from commit 76e1c8a19fb68b70dce222d2a50afa2704d00786)

commit f692918192
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Mon Jul 17 15:53:02 2023 +0000

    XNAP: fix a test

    (cherry picked from commit 6a1639c42f56f390bd74d3305d66e820a6ba3cc9)

commit 41dd4919ac
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 16 16:18:49 2023 +0000

    [Automatic update for 2023-07-16]

    Update manuf, services enterprise numbers, translations, and other items.

commit e4898e0e16
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 15 21:39:43 2023 -0400

    Qt: Fix displayed marked packet count label

    In PacketRangeGroupBox, we are accidentally showing the number
    of marked packets in the entire capture file in the "Displayed"
    column as well.

    When actually exporting packets, only the displayed market packets
    are exported if that column is selected, but the count shown to
    the user is wrong. Fix that.

    (cherry picked from commit 86652cef344bfcde4ae405af5c8bbcde0ef0ad38)

commit fd4808e2ae
Author: Nardi Ivan <nardi.ivan@gmail.com>
Date:   Sat Jul 15 13:01:40 2023 +0200

    TLS-utils: fix visualization of "max_ack_delay" transport parameter

    Is there a smarter way?

    Close #19209

    (cherry picked from commit 2fb12ccdcf3513e1fe9b4d730cb9eb543416b1cc)

commit 298ad817ae
Author: David Perry <boolean263@protonmail.com>
Date:   Tue Feb 21 08:11:46 2023 -0500

    TLS: use macros for GREASE checks

    The tests in `packet-tls-utils.c` for GREASE values aren't strictly
    correct, in that they would falsely ignore a value such as 0x1a2a.

    Create a macro to replace this test, which also serves to document the
    intent of the test to future developers.

    Also create a macro for the reserved values of QUIC transport parameters
    which serve a similar function as GREASE.

    (backported from commit 9730610c0b906361d72a17283cf69f140c2f8b79)

commit a5df027e30
Author: Elisey Shemyakin <shemyakin@roentgenprom.ru>
Date:   Fri Jul 14 15:11:10 2023 +0300

    Copy DICOM payload to Export Objects window

    Payload data for DICOM export object is allocated on the file scope, meaning it
    should be freed automatically on capture file close. When Export Objects window
    is closed it will attempt to free payload data memory which was allocated by
    the DICOM dissector on the file scope. This results in a program crash.
    Copying dissector's payload for the Export Objects window fixes #19207

    (cherry picked from commit 61ef5f756464b79b04c051ebc6ded91c16530c18)

commit b48b352b7b
Author: Jirka Novak <j.novak@netsystem.cz>
Date:   Tue Apr 4 23:42:32 2023 +0200

    RTP Decoder: Create conversation if no conversation doesn't exists

    When there is no signaling packets related to RTP, no conversation table
    record is created and no RTP is recognized by Wireshark. If "Decode As"
    is used, RTP packets are recognized, but no conversation table record
    was created therefore RTP packets were decoded one by one with no
    relation even they might be one conversation.
    The fix creates conversation table record if it do not exists.
    I tested before that it involves only branch "Decode As" because all
    other branches in the code create conversation record earlier.

    Closes #18829

    (cherry picked from commit 74981b5852387a678fd42c7a65914dbe8b8c8054)

commit 5db0972268
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 12 12:20:55 2023 -0700

    Debian: Try to fix our lintian overrides

commit 67a9498823
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 12 20:42:04 2023 +0200

    CFM: Workaround for TEST-ID TLV length specification bug

    Fixes #19198

commit 2d3ad78f77
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 12 11:37:03 2023 -0700

    Version: 4.0.7 → 4.0.8

    [skip ci]
